name: Release on Folder Update

on:
  push:
    paths:
      - 'mod/compat2/**' # Hardcoded path for the workflow trigger

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FOLDER_PATH: mod/compat2 # Define your folder path here as an environment variable
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
    steps:
    - uses: actions/checkout@v2

    - name: Zip the folder
      run: |
        zip -r ${FOLDER_PATH}.zip ${FOLDER_PATH}/
      shell: bash

    - name: Get the current version
      id: versioning
      run: |
        VERSION=$(git tag --list "${FOLDER_PATH}-v*" --sort=-v:refname | head -n 1 | sed "s|${FOLDER_PATH}-v||")
        if [[ -z "$VERSION" ]]; then
          VERSION=0
        fi
        echo "::set-output name=version::$VERSION"

    - name: Increment version and create tag
      id: new_version
      run: |
        VERSION=${{ steps.versioning.outputs.version }}
        NEW_VERSION=$((VERSION + 1))
        echo "::set-output name=version::$NEW_VERSION"
        echo "NEW_TAG=${FOLDER_PATH}-v$NEW_VERSION" >> $GITHUB_ENV

    - name: Delete previous tag
      run: |
        if git rev-parse "${FOLDER_PATH}-v${{ steps.versioning.outputs.version }}" >/dev/null 2>&1; then
          git tag -d "${FOLDER_PATH}-v${{ steps.versioning.outputs.version }}"
          git push --delete origin "${FOLDER_PATH}-v${{ steps.versioning.outputs.version }}"
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: Release ${{ env.NEW_TAG }}
        draft: false
        prerelease: false
        body: |
          Changes in this Release:
          - ${{ github.event.head_commit.message }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.FOLDER_PATH }}.zip
        asset_name: ${{ env.FOLDER_PATH }}-v${{ steps.new_version.outputs.version }}.zip
        asset_content_type: application/zip